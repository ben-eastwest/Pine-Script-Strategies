//************************ BUILT FOR S&P FUTURES ON THE DAILY TIME FRAME **********************************//

//@version=5
strategy("Composite RSI strategy", overlay=true)

//-- Global variables -- //
pos = strategy.position_size
price = strategy.position_avg_price

// -- Input Variables -- //
show = input.bool(true, 'Show Labels ?')

//-- Trailing stop variables -- //
atr = ta.atr(20)
mult = input.float(2.5, 'atr multi')

//-- Strategy variables --//
rsi1 = ta.rsi(close, 2)
rsi2 = ta.rsi(close, 24)
rsicomp = (rsi1 + rsi2) / 2

//--strategy logic--//
entry = rsicomp < rsicomp[1] and rsicomp <= rsicomp[5]
exit = rsicomp >= rsicomp[2]  and close > price

// -- Strategy entry --//
if entry and pos == 0
    strategy.entry('Long', strategy.long)
    if show == true
        label.new(bar_index, high + atr * 2, style=label.style_triangledown, color=color.green,size=size.auto, tooltip =
         'RSI : '+str.tostring(rsicomp,'#.##')+'\nRSI[1] :'+str.tostring(rsicomp[1],'#.##')+'\nRSI[5] :'+str.tostring(rsicomp[5],'#.##'))

//-- Trailing stop loss --- code taken from robot traders --- //
tsl = low[1] - (atr*mult)

long_stop_price = 0.0
long_stop_price := if pos > 0
    math.max(tsl, long_stop_price[1])
else
    0

// -- Strategy exit -- //
if pos > 0
    strategy.exit(id='TSL', stop=long_stop_price)
    if exit
        if show == true
            label.new(bar_index, high + atr * 2, style=label.style_circle, color=color.aqua, size=size.auto, tooltip = 'RSI : '+str.tostring(rsicomp,'#.##')+'\nRSI[2] : '+str.tostring(rsicomp[2],'#.##')+
             '\nEntry Price : '+str.tostring(price)+'\nClose : '+str.tostring(close))
        strategy.close(id='Long', comment='Profit')

// -- Plotting -- //
plot(series = pos > 0 ? long_stop_price : na, color=color.red, style=plot.style_linebr, linewidth=2)
